{
  "name": "sanity-root",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "bootstrap": "pnpm install && pnpm build:cli",
    "build": "turbo run build --filter='./packages/*' --filter='./packages/@sanity/*'",
    "build:bundle": "turbo run build:bundle --filter='./packages/*' --filter='./packages/@sanity/*'",
    "build:clean": "pnpm -r --parallel run clean",
    "build:cli": "turbo run build --filter=@sanity/cli --filter=sanity",
    "build:cli-only": "turbo run --filter=@sanity/cli build",
    "build:e2e": "pnpm e2e:build",
    "build:efps": "pnpm build --filter=efps-tests",
    "build:performance-studio": "pnpm perf:studio:build",
    "build:test-studio": "pnpm build --filter=sanity-test-studio",
    "check": "npm-run-all build --parallel check:*",
    "check:deps": "pnpm --recursive --parallel exec depcheck",
    "check:format": "prettier --cache --check .",
    "check:lint": "turbo run lint --continue -- --quiet",
    "check:oxlint": "oxlint --quiet",
    "check:test": "pnpm test -- --silent",
    "check:types": "tsc && turbo run check:types --filter='./packages/*' --filter='./packages/@sanity/*' --continue",
    "chore:format:fix": "prettier --cache --write .",
    "chore:lint:changed": "turbo run lint --filter=[HEAD^1] -- --quiet --fix",
    "chore:lint:fix": "turbo run lint --ui tui -- --quiet --fix",
    "chore:lint:inspect": "eslint --inspect-config",
    "chore:normalize-versions": "node -r esbuild-register scripts/normalizeDependencyVersions.ts",
    "chore:oxlint:fix": "oxlint --fix --fix-suggestions --quiet",
    "clean": "npm-run-all build:clean clean:deps",
    "clean:deps": "pnpm --r --parallel exec rm -Rf node_modules && rm -Rf node_modules",
    "depcheck": "pnpm check:deps",
    "deploy:movies": "pnpm build && cd examples/studios/movies-studio && sanity deploy",
    "deploy:test": "pnpm build && cd dev/test-studio && sanity deploy",
    "dev": "pnpm dev:test-studio",
    "dev:cli": "pnpm watch",
    "dev:design-studio": "pnpm --filter design-studio dev",
    "dev:embedded-studio": "pnpm --filter embedded-studio dev",
    "dev:i18n": "SANITY_STUDIO_DEBUG_I18N=triangles pnpm start",
    "dev:i18n:reverse": "SANITY_STUDIO_DEBUG_I18N=reverse pnpm start",
    "dev:page-building-studio": "pnpm --filter sanity-page-building-studio dev",
    "dev:starter-studio": "pnpm --filter sanity-starter-studio dev",
    "dev:strict-studio": "pnpm --filter sanity-strict-studio dev",
    "dev:test-create-studio": "pnpm --filter test-create-integration-studio dev",
    "dev:test-studio": "pnpm --filter sanity-test-studio dev",
    "dev:test-studio-production-profiling": "REACT_PRODUCTION_PROFILING=true turbo run start --filter=sanity-test-studio",
    "docs:report": "tsx -r dotenv-flow/config scripts/doc-report/docReport.ts",
    "docs:report:cleanup": "tsx -r dotenv-flow/config scripts/doc-report/docReportCleanup",
    "docs:report:create": "tsx -r dotenv-flow/config scripts/doc-report/docReportCreate",
    "e2e:build": "pnpm turbo run build --filter=studio-e2e-testing",
    "e2e:cleanup:pr": "tsx -r dotenv-flow/config test/scripts/cleanupPr",
    "e2e:codegen": "node -r dotenv-flow/config ./node_modules/.bin/sanity-test codegen",
    "e2e:dev": "pnpm --filter studio-e2e-testing dev",
    "e2e:preview": "pnpm --filter e2e build && pnpm --filter studio-e2e-testing preview",
    "e2e:setup": "pnpm --filter e2e run setup",
    "e2e:start": "pnpm --filter studio-e2e-testing preview",
    "efps:dev": "cd dev/efps && pnpm dev",
    "efps:test": "cd dev/efps && pnpm test",
    "efps:write:report": "cd dev/efps && pnpm write:report",
    "example:blog-studio": "cd examples/studios/blog-studio && pnpm start",
    "example:clean-studio": "cd examples/studios/clean-studio && pnpm start",
    "example:ecommerce-studio": "cd examples/studios/ecommerce-studio && pnpm start",
    "example:example-studio": "cd examples/studios/blog-studio && pnpm start",
    "example:movies-studio": "cd examples/studios/movies-studio && pnpm start",
    "generate:docs": "tsx -r dotenv-flow/config ./scripts/generate-documents/cli.ts",
    "generate:dts-exports": "turbo run generate:dts-exports",
    "preinstall": "npx only-allow pnpm",
    "postinstall": "husky",
    "install:deps": "pnpm install",
    "lint": "turbo run check:oxlint lint --ui tui",
    "lint:fix": "turbo run --concurrency=1 chore:format:fix chore:oxlint:fix && pnpm chore:lint:fix",
    "list:deps-updates": "npm-check-updates --workspaces --root -m",
    "normalize-pkgfields": "node -r esbuild-register scripts/normalizePackageFields",
    "normalize:versions": "node -r esbuild-register scripts/normalizeDependencyVersions.ts",
    "perf:codegen": "cd perf/tests && pnpm perf:codegen",
    "perf:studio": "cd perf/studio && pnpm preview",
    "perf:studio:build": "pnpm build --filter=perf-studio",
    "perf:studio:dev": "cd perf/studio && pnpm dev",
    "perf:test": "cd perf/tests && pnpm perf:test",
    "prepublishOnly": "pnpm build",
    "publish:tarball": "node -r esbuild-register scripts/publish/tarball",
    "release": "pnpm build && lerna publish --exact --force-publish",
    "release:canary": "RELEASE_TAG=canary pnpm release:tag",
    "release:current-branch": "RELEASE_TAG=`git rev-parse --abbrev-ref HEAD | sed 's/\\//\\_/g'` pnpm release:tag",
    "release:notes": "tsx scripts/printReleaseNotesTemplate",
    "release:rc": "pnpm build && lerna publish --force-publish --dist-tag=dev-preview --preid=rc --exact",
    "release:tag": "RELEASE_TAG=\"${RELEASE_TAG:-canary}\"; pnpm build && lerna publish --canary --force-publish --no-git-tag-version --dist-tag=$RELEASE_TAG --preid=$RELEASE_TAG --exact",
    "start": "pnpm dev",
    "test": "pnpm test:vitest",
    "test:e2e": "pnpm --filter e2e test",
    "test:exports": "turbo run test --filter=@repo/test-exports --filter=@repo/test-dts-exports",
    "test:vitest": "vitest --run",
    "test:vitest:watch": "vitest --watch",
    "tsdoc:dev": "sanity-tsdoc dev",
    "watch": "pnpm --filter @sanity/* --filter sanity watch"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,mjs,cjs}": [
      "prettier --cache --write",
      "oxlint --fix --quiet"
    ],
    "*.{md,yml,yaml,css,json}": [
      "prettier --cache --write"
    ]
  },
  "prettier": "@sanity/prettier-config",
  "devDependencies": {
    "@lerna-lite/cli": "^4.9.0",
    "@lerna-lite/list": "^4.9.0",
    "@lerna-lite/publish": "^4.9.0",
    "@repo/bundle-manager": "workspace:*",
    "@repo/dev-aliases": "workspace:*",
    "@repo/eslint-config": "workspace:*",
    "@repo/package.config": "workspace:*",
    "@repo/test-config": "workspace:*",
    "@repo/tsconfig": "workspace:*",
    "@repo/utils": "workspace:*",
    "@sanity/prettier-config": "^1.0.6",
    "@types/node": "^24.6.1",
    "@vitest/coverage-v8": "^3.2.4",
    "conventional-changelog-conventionalcommits": "^9.1.0",
    "depcheck": "^1.4.7",
    "dotenv": "^16.6.1",
    "dotenv-flow": "^4.1.0",
    "eslint": "catalog:",
    "eslint-formatter-gha": "^1.6.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.0",
    "npm-run-all2": "^6.2.6",
    "oxlint": "1.18.0",
    "playwright": "catalog:",
    "prettier": "catalog:",
    "tsx": "^4.20.6",
    "turbo": "^2.5.8",
    "typescript": "catalog:",
    "vercel": "^48.6.0",
    "vitest": "catalog:"
  },
  "packageManager": "pnpm@10.18.3",
  "pnpm": {
    "peerDependencyRules": {
      "allowAny": [
        "react",
        "react-dom"
      ]
    },
    "overrides": {
      "jsdom": "26.1.0",
      "vitest": "$vitest"
    }
  },
  "isSanityMonorepo": true
}
